#!/bin/bash

# tracker.sh - Generate pre-formatted Markdown checklist for systematic file processing
# Part of the Rust OSS Knowledge Extraction System

set -e

# Usage function
usage() {
    echo "Usage: $0 <file_id> <file_path>"
    echo "  file_id: Unique identifier (e.g., '1.22')"
    echo "  file_path: Full path to the file to process"
    echo ""
    echo "Example: $0 1.22 /path/to/your/file.md"
    exit 1
}

# Check arguments
if [ $# -ne 2 ]; then
    usage
fi

FILE_ID="$1"
FILE_PATH="$2"

# Validate file exists
if [ ! -f "$FILE_PATH" ]; then
    echo "Error: File '$FILE_PATH' not found"
    exit 1
fi

# Get filename without path for display
FILENAME=$(basename "$FILE_PATH")

# Get total line count
TOTAL_LINES=$(wc -l < "$FILE_PATH" | tr -d ' ')

# Calculate number of chunks (1000 lines each)
CHUNKS=$(((TOTAL_LINES + 999) / 1000))

echo "# Processing Checklist for $FILENAME"
echo ""
echo "**File:** $FILE_PATH"
echo "**Total Lines:** $TOTAL_LINES"
echo "**Chunks:** $CHUNKS (1000 lines each)"
echo "**File ID:** $FILE_ID"
echo ""
echo "## Tasks"
echo ""

# Generate checklist
for ((i=1; i<=CHUNKS; i++)); do
    START_LINE=$(((i-1) * 1000 + 1))

    if [ $i -eq $CHUNKS ]; then
        END_LINE=$TOTAL_LINES
    else
        END_LINE=$((i * 1000))
    fi

    printf "- [ ] %s.%d Read %s lines %d-%d - [Add task description here]\n" \
           "$FILE_ID" "$i" "$FILENAME" "$START_LINE" "$END_LINE"
done

echo ""
echo "---"
echo "*Generated by tracker.sh on $(date)*"